---
- hosts: zinglax
  remote_user: root
  become: true

  vars_files:
  - ./group_vars/secrets.yml  

  vars:
    domain_root: zinglax.com

  tasks: 


  - name: Remove "{{ domain_root }}.conf" from /etc/nginx/sites-available
    file:
      path: "/etc/nginx/sites-available/{{ domain_root }}.conf"
      state: absent


  - name: Template "{{ domain_root }}.conf" to /etc/nginx/sites-available
    template:
      src: "../source/site/zinglax.com.conf"
      dest: "/etc/nginx/sites-available/{{ domain_root }}.conf"


  - name: Ensures /ENVS dir exists
    file: path="/ENVS" group=www-data state=directory


  - name: Copy files from a directory to remote server
    synchronize:
      src: "../source/site"
      dest: "/var/www/"
      archive: no
      recursive: yes


  # - name: Template "application.wsgi" to /var/www/site/application.wsgi
  #   template:
  #     src: "../source/site/application.wsgi"
  #     dest: "/var/www/site/application.wsgi"


  - name: Template "config.py" to /var/www/site/config.py
    template:
      src: "../source/site/config.py"
      dest: "/var/www/site/config.py"


  - name: Remove existing "/var/www/{{ domain_root }}" if exists.
    file:
      path: "/var/www/{{ domain_root }}"
      state: absent
      # ignore_errors: yes


  - name: Move site folder to bar "{{ domain_root }}"
    command: "mv /var/www/site /var/www/{{ domain_root }}"


  - name: Install requirements into virtualenv
    pip: 
      requirements: "/var/www/{{ domain_root }}/requirements.txt"
      virtualenv: "/ENVS/{{ domain_root }}"
      virtualenv_python: python3.5


  - name: chmod virtual envrionment
    file: 
      path: "/ENVS/{{ domain_root }}"
      state: directory
      recurse: yes
      group: www-data


  - name: Change permissions for deployment directory.
    shell: |
      chown -R www-data:www-data /ENVS
      chmod -R 777 /ENVS

      chown -R www-data:www-data /var/www/"{{ domain_root }}"
      chmod -R 777 /var/www/"{{ domain_root }}"


  - name: Symlink "{{ domain_root }}.conf" to sites enabled.
    shell: |
      ln -sf "/etc/nginx/sites-available/{{ domain_root }}.conf" "/etc/nginx/sites-enabled/{{ domain_root }}.conf"


  - name: Create letsencrypt certificate
    shell: |
      certbot -n --agree-tos --redirect --email dylanzingler@gmail.com --nginx -d "{{ do_domain_name }}"


  - name: Template flask.service to "/etc/systemd/system/{{ domain_root }}.service"
    template:
      src: "../source/site/flask.service"
      dest: "/etc/systemd/system/{{ domain_root }}.service"


  - name: Start Flask Service
    systemd:
      name: "{{ domain_root }}.service"
      state: started
      enabled: yes


  handlers:
    - name: restart nginx
      service: name=nginx state=restarted